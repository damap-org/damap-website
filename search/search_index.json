{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About DAMAP","text":"<p>DAMAP supports researchers in managing both data and code along the research data lifecycle and helps meet funders' requirements by generating DMPs in funder-specific templates. DAMAP can integrate with an institution's existing databases, e.g., project, HR, to pull relevant data into a DMP, increasing accuracy and reducing the overall effort needed to complete a DMP.</p> <p>The content and structure of DAMAP is based on Science Europe's Core Requirements for Data Management Plans. The tool guides users through all sections of a DMP in ten steps by asking questions, suggesting text, and providing helpful information. As a result, DAMAP delivers a DMP as a document that can be customized and used for submission to European and national research funders. Furthermore, the tool is compatible with the RDA's recommendation for machine-actionable DMPs and offers a JSON export of the DMP.</p>"},{"location":"#why-damap","title":"Why DAMAP?","text":"<ul> <li> <p> Guidance</p> <p>DAMAP guides you step by step through the different sections of a DMP following the Practical Guide to the International Alignment of Research Data Management.</p> </li> <li> <p> Export</p> <p>DAMAP exports a pre-filled DMP as a Word document that you can customize and use for submission to funders. Supported templates: <ul><li>FWF</li> <li>Horizon Europe</li> <li>Science Europe</li></ul></p> </li> <li> <p> Automation</p> <p>DAMAP saves you work by: <ul> <li>pre-filling content with detailed information from your CRIS application and other systems</li> <li>providing wizards, guidance, and item lists to choose from</li> <li>suggesting answers that you can either comply with or adjust to your needs</li> </ul></p> </li> <li> <p> Compatibility</p> <p>DAMAP is compatible with the RDA recommendation on machine actionable DMPs.</p> </li> </ul>"},{"location":"#community","title":"Community","text":"<p>These institutions use DAMAP and integrated it into their data management planning:</p> <ul> <li> <p>TU Wien DMP Tool</p> <p></p> <p>Access </p> </li> <li> <p>TU Graz DMP Tool</p> <p></p> <p>Access </p> </li> <li> <p>Med Uni Graz DMP Tool</p> <p></p> <p>Access </p> </li> </ul>"},{"location":"#try-it-out","title":"Try it out","text":"<p>Click here to try the DAMAP demo instance. Please contact us at info@damap.org for access.</p> <p>Note: additional services have been integrated with the application to simulate how the tool will operate in production.</p> <p> Tip: use our tutorial to help you navigate DAMAP and create a DMP.</p>"},{"location":"#get-our-code","title":"Get our code","text":"<p>DAMAP is open source and available under the MIT license.</p> <ul> <li> <p>Frontend</p> </li> <li> <p>Backend</p> </li> </ul>"},{"location":"#contact","title":"Contact","text":"<p>Are you interested in DAMAP? Reach out to us at info@damap.org for general questions or for help with deploying DAMAP at your institution.</p>"},{"location":"contact/","title":"Website publisher","text":"<p>Disclosure according to \u00a7 25 Mediengesetz: Owner of this website is the Center for Research Data Management, a subunit of the Research, Technology and Innovation Support department of TU Wien.</p> <p>Center for Research Data Management Favoritenstra\u00dfe 16/top floor 1040 Vienna, Austria </p>"},{"location":"contact/#contact-information","title":"Contact information","text":"<p>If you have any further questions about DAMAP, or want to share some feedback on our website, please contact us at info@damap.org.</p>"},{"location":"contact/#copyright","title":"Copyright","text":"<p>The information on this server is provided by the project partners. The project partners independently create the project information and enter it into the system. \u00a9 Copyright - unless stated otherwise - held by TU Wien.</p>"},{"location":"contact/#disclaimer","title":"Disclaimer","text":"<p>All texts on the homepage have been carefully checked. However, we do not guarantee the accuracy, completeness and validity of the information. We thus accept no responsibility or liability. Links to other websites have been carefully selected. However, as we have no influence on the content of other websites, we do not assume responsibility for the information provided by other websites linked through this website.</p>"},{"location":"manual/","title":"DAMAP Reference Manual","text":"<p>Welcome to the DAMAP Reference Manual! This guide is written with system administrators in mind who want to deploy DAMAP in their infrastructure.</p> <p>Tip</p> <p>If you are looking for a guide on using DAMAP as a researcher, please check out our tutorial.</p>"},{"location":"manual/#system-requirements","title":"System requirements","text":"<p>In order to successfully deploy DAMAP, you will need:</p> <ul> <li>A Linux container environment (Docker/Podman/Kubernetes/OpenShift)</li> <li>At least 6 GB RAM</li> <li>At least 4 GB of disk space</li> <li>A PostgreSQL database (Oracle may also work but is not officially supported)</li> <li>An OIDC server with PKCE support for authentication</li> </ul> <p>Tip</p> <p>We offer an experimental Helm chart for Kubernetes deployments.</p> <p>Note</p> <p>While you may have some success deploying DAMAP without a container environment (e.g. bare metal or on a VM), several services DAMAP needs (FITS, Gotenberg, etc.) do not support non-containerized environments. We strongly recommend deploying DAMAP in a container environment such as Docker or Kubernetes.</p>"},{"location":"manual/#planning-your-deployment","title":"Planning your deployment","text":"<p>In broad strokes, the DAMAP deployment can be broken down into the following steps:</p> <ol> <li>Creating an OIDC client ID for DAMAP</li> <li>Creating a database for DAMAP in your PostgreSQL server</li> <li>Starting the Gotenberg service</li> <li>Starting the FITS service (optional)</li> <li>Configuring and starting the DAMAP backend</li> <li>Deploying the DAMAP frontend on static webserver</li> <li>Creating a reverse proxy/load balancer in front of the DAMAP deployment (optional)</li> </ol> <p>Read the documentation  </p>"},{"location":"manual/#need-help-reach-out","title":"Need help? Reach out!","text":"<p>If you are stuck during your deployment, please reach out to us at info@damap.org. We are happy to help!</p>"},{"location":"manual/configuration/","title":"DAMAP configuration overview","text":"<p>This section contains all supported configuration options for the DAMAP backend. All sections provide options as environment variables you can use when deploying the stock DAMAP backend, but also the <code>application.yaml</code> variant in case you decide to recompile DAMAP from source.</p> <p>The following configuration sections are available:</p> <ul> <li>General</li> <li>Authentication</li> <li>Database</li> </ul>"},{"location":"manual/configuration/authentication/","title":"Configuring authentication","text":"<p>This section details the configuration options you can pass when deploying the backend. As described in the overview, we provide both the environment variable for stock deployment and the <code>application.yaml</code> variant for recompilation.</p> Environment variable application.yaml Description <code>DAMAP_AUTH_BACKEND_URL</code> <code>damap.auth.backend.url</code> The URL the backend can reach the OIDC server on. The URL must be the full path to the realm and the path <code>.well-known/openid-configuration</code> must exist under this URL. <code>DAMAP_AUTH_FRONTEND_URL</code> <code>damap.auth.frontend.url</code> The URL the user can reach the OIDC server under. This must be a <code>https://</code> URL unless the hostname is <code>localhost</code>.  The URL must be the full path to the realm and the path <code>.well-known/openid-configuration</code> must exist under this URL. <code>DAMAP_AUTH_BACKEND_CLIENT</code> <code>damap.auth.backend.client</code> The client ID configured in the OIDC server for the backend to use. This client ID must be configured to support the authorization code flow with PKCE. <code>DAMAP_AUTH_FRONTEND_CLIENT</code> <code>damap.auth.frontend.client</code> The client ID configured in the OIDC server for the frontend to use. This client ID must be configured to support the authorization code flow with PKCE. <code>DAMAP_AUTH_SCOPE</code> <code>damap.auth.scope</code> The scopes to request from the OIDC server, separated by space. <code>DAMAP_AUTH_USER</code> <code>damap.auth.user</code> The OIDC claim to use as a user ID. Defaults to <code>personID</code>."},{"location":"manual/configuration/database/","title":"Database configuration","text":"<p>This section details the configuration options you can pass when deploying the backend. As described in the overview, we provide both the environment variable for stock deployment and the <code>application.yaml</code> variant for recompilation.</p> Environment variable application.yaml Description <code>DAMAP_DATASOURCE_URL</code> <code>damap.datasource.url</code> The JDBC connect string in the format of <code>jdbc:postgresql://SERVERNAME:5432/DATABASENAME</code>. <code>DAMAP_DATABASE_DB_KIND</code> <code>damap.dataasource.db_kind</code> Your database engine kind (<code>postgresql</code> or <code>oracle</code>). <code>DAMAP_DATASOURCE_USERNAME</code> <code>damap.datasource.username</code> Username for database authentication. <code>DAMAP_DATASOURCE_PASSWORD</code> <code>damap.datasource.password</code> Password for database authentication. <code>DAMAP_DATASOURCE_DIALECT</code> <code>damap.datasource.dialect</code> Dialect for the Hibernate ORM. Defaults to <code>org.hibernate.dialect.PostgreSQLDialect</code>. <p>Warning</p> <p>We officially only support PostgreSQL as a database engine. Oracle is supported only on a best effort basis.</p> <p>Warning</p> <p>A change in the database engine requires either recompilation from source or re-augmentation. The default DAMAP backend container does this automatically, but requires write access to the container root filesystem. For custom containers you may need to implement re-augmentation in your startup script.</p>"},{"location":"manual/configuration/general/","title":"General options","text":"<p>This section details the configuration options you can pass when deploying the backend. As described in the overview, we provide both the environment variable for stock deployment and the <code>application.yaml</code> variant for recompilation.</p> Environment variable application.yaml Description <code>DAMAP_ENV</code> <code>damap.env</code> Either <code>DEV</code> or <code>PROD</code>. <code>DAMAP_ORIGINS</code> <code>damap.origins</code> The URL the backend should send out in the CORS header. This should match your frontend URL. <code>DAMAP_FITS_URL</code> <code>damap.fits-url</code> URL to your FITS service. (e.g. <code>http://fits-service:8080/fits</code>) <code>DAMAP_GOTENBERG_URL</code> <code>damap.gotenbergurl</code> URL to your Gotenberg service. (e.g. <code>http://gotenberg:3000</code>) <code>DAMAP_TITLE</code> <code>damap.title</code> The name of the DAMAP instance."},{"location":"manual/cris/","title":"CRIS system integration","text":"<p>This section details the configuration options you can pass when deploying the backend. As described in the configuration overview, we provide both the environment variable for stock deployment and the <code>application.yaml</code> variant for recompilation.</p> <p>Warning</p> <p>The settings described on this page are not yet available in a DAMAP release. See this pull request.</p> <p>DAMAP has the following built-in CRIS integrations:</p> <ul> <li>Elsevier Pure (pending release)</li> <li>ORCID</li> </ul> <p>You can also develop your own integration.</p>"},{"location":"manual/cris/#person-database","title":"Person database","text":"Environment variable application.yaml Description <code>DAMAP_PERSON_SERVICES</code> <code>damap.person.services</code> A JSON-formatted string containing a list of services providing a person database to consult. <p>This configuration option is a JSON-formatted string with the following fields: <pre><code>[\n  {\n    \"display-text\": \"University\",\n    \"query-value\": \"UNIVERSITY\",\n    \"class-name\": \"org.damap.base.integration.pure.PurePersonService\"\n  }\n]\n</code></pre></p> <p>Possible values for <code>class-name</code> are:</p> <ul> <li><code>org.damap.base.integration.orcid.ORCIDPersonServiceImpl</code> for the ORCID integration</li> <li><code>org.damap.base.integration.pure.PurePersonService</code> for the Elsevier Pure integration</li> <li>Full class names for custom integrations</li> </ul>"},{"location":"manual/cris/#projects-database","title":"Projects database","text":"Environment variable application.yaml Description <code>DAMAP_PROJECTS_SERVICE</code> <code>damap.projects-service</code> Name of the projects service to consult for a project list. <p>The projects service value defaults to <code>default</code>. This is a fallback from older DAMAP integrations that did not have an explicit configuration. Instead, an explicit qualifier should be preferred.</p> <p>Possible values are:</p> <ul> <li><code>default</code> or custom names for custom integrations</li> <li><code>pure</code> for the Elsevier Pure integration</li> </ul>"},{"location":"manual/cris/custom/","title":"Custom CRIS integrations","text":"<p>Custom CRIS integrations require the rebuild of the DAMAP backend from source. The easiest way to achieve this is to use the included <code>Dockerfile</code> to build a container image.</p>"},{"location":"manual/cris/custom/#person-integrations","title":"Person integrations","text":"<p>Person integrations allow your users to look up people from your institutional database. For this integration, you will need to implement the <code>org.damap.base.integration.PersonService</code> interface. This service returns a <code>ContributorDO</code> object based on your institutional database.</p>"},{"location":"manual/cris/custom/#projects-integration","title":"Projects integration","text":"<p>Project integrations allow your users to select projects from your CRIS database. For this integration, you will need to implement the <code>org.damap.base.integration.ProjectServiceProvider</code> interface. This service returns a <code>ProjectDO</code> object based on your institutional database.</p>"},{"location":"manual/cris/orcid/","title":"ORCID integration","text":"<p>DAMAP supports looking up people by their ORCID ID in the person search form. To use this integration, simply add the following segment to the persons integration configuration:</p> <pre><code>[\n  {\n    \"display-text\": \"ORCID\",\n    \"query-value\": \"ORCID\",\n    \"class-name\": \"org.damap.base.rest.persons.orcid.ORCIDPersonServiceImpl\"\n  }\n]\n</code></pre> <p>Note that ORCID does not provide a projects integration.</p>"},{"location":"manual/cris/pure/","title":"Elsevier Pure integration","text":"<p>Warning</p> <p>The settings described on this page are not yet available in a DAMAP release. See this pull request.</p> <p>DAMAP comes with a built-in Elsevier Pure integration. This provides both the ability to look up people and to look up projects from DAMAP.</p>"},{"location":"manual/cris/pure/#general-configuration","title":"General configuration","text":"Environment variable application.yaml Description <code>DAMAP_ELSEVIER_PURE_DESCRIPTION_CLASSIFICAITON</code> <code>damap.elsevier-pure-description-classification</code> Project description classification in Pure. Should start with <code>/dk/atira/pure/...</code>. <code>DAMAP_ELSEVIER_PURE_CONTRIBUTOR_ROLE_CLASSIFICATIONS</code> <code>damap.elsevier-pure-contributor-role-classifications</code> A JSON-formatted key-value map of Pure classifications mapped to DAMAP roles (see below). <code>DDAMAP_ELSEVIER_PURE_PROJECT_LEAD_ROLE_CLASSIFICATION</code> <code>damap.elsevier-pure-project-lead-role-classification</code> The Pure classification for project leads. Should start with <code>/dk/atira/pure/...</code>. <code>DAMAP_ELSEVIER_PURE_BACKEND</code> <code>damap.elsevier-pure-backend</code> Set this to <code>http</code> to use a HTTP server, or to <code>file</code> to read from files. <code>DAMAP_ELSEVIER_PURE_ENDPOINT_URL</code> <code>damap.elsevier-pure-endpoint-url</code> HTTP endpoint URL when using the <code>http</code> backend. <code>DAMAP_ELSEVIER_PURE_API_KEY</code> <code>damap.elsevier-pure-api-key</code> API key to use for the <code>http</code> backend. <code>DAMAP_ELSEVIER_PURE_PROJECTS_FILE</code> <code>damap.elsevier-pure-projects-file</code> The path to the file containing the projects in JSON format for the <code>file</code> backend. Must start with <code>file:/</code>. <code>DAMAP_ELSEVIER_PURE_PERSONS_FILE</code> <code>damap.elsevier-pure-persons-file</code> The path to the file containing the persons in JSON format for the <code>file</code> backend. Must start with <code>file:/</code>. <p>DAMAP roles</p> <p>DAMAP supports the following roles: <code>DATA_COLLECTOR</code>, <code>DATA_CURATOR</code>, <code>DATA_MANAGER</code>, <code>DISTRIBUTOR</code>, <code>EDITOR</code>, <code>HOSTING_INSTITUTION</code>, <code>PRODUCER</code>, <code>PROJECT_LEADER</code>, <code>PROJECT_MANAGER</code>, <code>PROJECT_MEMBER</code>, <code>REGISTRATION_AGENCY</code>, <code>REGISTRATION_AUTHORITY</code>, <code>RELATED_PERSON</code>, <code>RESEARCHER</code>, <code>RESEARCH_GROUP</code>, <code>RIGHTS_HOLDER</code>, <code>SPONSOR</code>, <code>SUPERVISOR</code>, <code>WORK_PACKAGE_LEADER</code>, <code>PRINCIPAL_INVESTIGATOR</code>, <code>PROJECT_COORDINATOR</code>, <code>OTHER</code>.</p>"},{"location":"manual/cris/pure/#setting-up-the-project-database","title":"Setting up the project database","text":"<p>To set up Pure as a project database, set the <code>DAMAP_PROJECTS_SERVICE</code> to <code>pure</code>.</p>"},{"location":"manual/cris/pure/#setting-up-as-a-persons-database","title":"Setting up as a persons database","text":"<p>To set up Pure as a persons database, add the following entry to the<code>DAMAP_PERSON_SERVICE</code> setting:</p> <pre><code>[\n  {\n    \"display-text\": \"University\",\n    \"query-value\": \"UNIVERSITY\",\n    \"class-name\": \"org.damap.base.integration.pure.PurePersonService\"\n  }\n]\n</code></pre>"},{"location":"manual/customization/","title":"Customizing DAMAP","text":"<p>You can customize the appearance of the DAMAP installation in several ways.</p>"},{"location":"manual/customization/#available-customizations","title":"Available customizations","text":"<ul> <li>Logos</li> <li>Colors</li> <li>Texts</li> </ul>"},{"location":"manual/customization/#recompiling-the-frontend","title":"Recompiling the frontend","text":"<p>Please note that many customizations require you to rebuild the frontend code from source. The easiest way to do this is to use the included <code>Dockerfile</code> to build a container image.</p>"},{"location":"manual/customization/colors/","title":"Customizing colors","text":"<p>Color customizations require a rebuild of the DAMAP frontend. You can change the colors in <code>apps/damap-frontend/src/themes/custom-palettes.scss</code> in the frontend code and recompile the frontend from source.</p>"},{"location":"manual/customization/logos/","title":"Customizing logos","text":"<p>If you would like to customize the logos on your DAMAP instance, you must provide the logos in the following formats:</p> <ul> <li><code>logo_cropped.svg</code>: 635x124 pixel SVG (example)</li> <li><code>logo.svg</code>: 842x595 pixel SVG (example)</li> </ul>"},{"location":"manual/customization/logos/#method-1-mounting-it-in-the-container","title":"Method 1: Mounting it in the container","text":"<p>This method mounts the logos into the container from the outside. The correct mount paths are:</p> <ul> <li><code>/usr/lib/nginx/html/assets/logo-cropped.svg</code></li> <li><code>/usr/lib/nginx/html/assets/logo.svg</code></li> </ul>"},{"location":"manual/customization/logos/#method-2-rebuilding-the-container","title":"Method 2: Rebuilding the container","text":"<p>You can replace the assets in the <code>damap-frontend/tree/next/apps/damap-frontend/src/assets</code> folder in the frontend code and rebuild the frontend from source.</p>"},{"location":"manual/customization/texts/","title":"Customizing texts","text":"<p>If you would like to change the texts in the frontend, you can do so by preparing the translation files. You can supply these to the frontend to change the texts.</p>"},{"location":"manual/customization/texts/#method-1-mounting-the-files","title":"Method 1: mounting the files","text":"<p>You can mount the translation files directly in the container. Mount your prepared <code>i18n</code> directory in <code>/usr/lib/nginx/html/assets/i18n</code>.</p>"},{"location":"manual/customization/texts/#method-2-recompiling-the-frontend","title":"Method 2: recompiling the frontend","text":"<p>You can als place the translation files in the <code>apps/damap-frontend/src/assets/i18n</code> folder in the frontend code and recompile the frontend from source.</p>"},{"location":"manual/deployment/","title":"Deploying DAMAP","text":"<p>This guide outlines the steps for successfully deploying DAMAP. However, for most cases we recommend creating a deployment manifest either based on the DAMAP docker compose files or the (currently experimental) Helm chart.</p>"},{"location":"manual/deployment/#step-1-create-oidc-credentials","title":"Step 1: create OIDC credentials","text":"<p>Before you begin your DAMAP deployment, make sure your OIDC server is configured properly.</p> <p>Read the documentation  </p>"},{"location":"manual/deployment/#step-2-create-a-database-for-damap","title":"Step 2: create a database for DAMAP","text":"<p>DAMAP requires a database, preferably PostgreSQL, in order to work. You can use your existing PostgreSQL server or you can deploy a new one.</p> <p>Read the documentation  </p>"},{"location":"manual/deployment/#step-3-deploying-gotenberg-optional","title":"Step 3: deploying Gotenberg (optional)","text":"<p>To create PDF previews, DAMAP uses Gotenberg, an API server for PDF creation. This step is optional.</p> <p>Read the documentation  </p>"},{"location":"manual/deployment/#step-4-deploying-the-fits-service-optional","title":"Step 4: deploying the FITS service (optional)","text":"<p>In order to automatically detect dataset data types, DAMAP uses FITS. This is an optional component.</p> <p>Read the documentation  </p>"},{"location":"manual/deployment/#step-5-deploying-the-damap-backend","title":"Step 5: deploying the DAMAP backend","text":"<p>The DAMAP backend is the heart of the DAMAP application.</p> <p>Read the documentation  </p>"},{"location":"manual/deployment/#step-6-deploying-the-damap-frontend","title":"Step 6: deploying the DAMAP frontend","text":"<p>Deploying the DAMAP frontend is the last step of getting DAMAP running. </p> <p>Read the documentation  </p>"},{"location":"manual/deployment/backend/","title":"Deploying the DAMAP backend","text":"<p>The DAMAP backend is a Java application written for Quarkus. We currently only support containerized deployments and recommend using the <code>ghcr.io/damap-org/damap-backend:next</code> image unless you have created a custom CRIS integration that needs recompilation.</p> <p>You can pass all configuration options to the DAMAP backend using environment variables. Please see the configuration section for details on available configuration options.</p>"},{"location":"manual/deployment/backend/#minimum-configuration","title":"Minimum configuration","text":"<p>At the very least, you will need to provide the following environment variables for DAMAP to work:</p> <ul> <li><code>DAMAP_DATASOURCE_URL</code> in the format of <code>jdbc:postgresql://SERVERNAME:5432/DATABASENAME</code>.</li> <li><code>DAMAP_DATABASE_DB_KIND</code> as your database engine name (e.g. <code>postgresql</code>).</li> <li><code>DAMAP_DATASOURCE_DIALECT</code> containing the Hibernate dialect (e.g. <code>org.hibernate.dialect.PostgreSQLDialect</code>).</li> <li><code>DAMAP_DATASOURCE_USERNAME</code> and <code>DAMAP_DATASOURCE_PASSWORD</code> with your database credentials</li> <li><code>DAMAP_ORIGINS</code> containing the valid origin URLs for your frontend.</li> <li><code>DAMAP_AUTH_BACKEND_URL</code> containing the OIDC server URL the backend should use.</li> <li><code>DAMAP_AUTH_FRONTEND_URL</code> containing the user-accessible OIDC URL.</li> <li><code>DAMAP_AUTH_BACKEND_CLIENT</code> containing the OIDC client ID the backend should use.</li> <li><code>DAMAP_AUTH_FRONTEND_CLIENT</code> containing the OIDC client ID the backend should use.</li> </ul> <p>You can find a reference of all available configuration options in the configuration section.</p>"},{"location":"manual/deployment/backend/#deploying-with-a-read-only-filesystem","title":"Deploying with a read-only filesystem","text":"<p>DAMAP uses Quarkus re-augmentation to switch database engines, which requires write permissions to the underlying filesystem. If you would like to deploy using a read-only filesystem, or with a user ID without permissions to write the filesystem (e.g. in OpenShift), you need to perform the following steps:</p> <ol> <li>Deploy DAMAP with PostgreSQL or recompile the DAMAP backend with your database engine</li> <li>Create a file named /quarkus-app/.db_kind containing the word <code>postgresql</code> (or your database engine) inside the container. You can do this using a mount point from the outside or as a <code>ConfigMap</code>/<code>Secret</code> in Kubernetes.</li> </ol> <p>Warning</p> <p>Simply switching the database engine in the environment variables will not work with a read-only filesystem as parts of the code need to be recompiled!</p>"},{"location":"manual/deployment/database/","title":"Creating a database for DAMAP","text":"<p>DAMAP officially supports PostgreSQL as a database engine. Other database engines like Oracle may work, but are not officially supported. If you can, please stick to PostgreSQL.</p>"},{"location":"manual/deployment/database/#deploying-postgresql","title":"Deploying PostgreSQL","text":"<p>If you do not have a PostgreSQL server running at your institution, the easiest way to deploy one is to use a container. We recommend deploying the official PostgreSQL image from the Ddocker Hub community library.</p>"},{"location":"manual/deployment/database/#creating-a-database","title":"Creating a database","text":"<p>Tip</p> <p>If you deployed PostgreSQL specifically for DAMAP using the official container image, you will not need to perform this step.</p> <p>If you are using a shared PostgreSQL instance with other applications, you will need to create a separate database as well as a separate user. Please check the <code>CREATE DATABASE</code>, the <code>CREATE USER</code>, and the <code>GRANT</code> commands.</p> <p>Warning</p> <p>DAMAP must be able to modify the table structure, otherwise it will not be able to apply the database schema changes on startup. Make sure your user has sufficient privileges.</p>"},{"location":"manual/deployment/fits/","title":"Deploying the FITS service (optional)","text":"<p>DAMAP uses Islandora FITS to automatically detect data types for datasets researchers add to DMPs. If you would like to make use of this functionality, you will need to deploy the FITS service.</p> <p>We currently recommend deploying FITS using the <code>islandora/fits:main</code> container image. This exposes the FITS service on port 8080, which the DAMAP backend uses.</p> <p>Warning</p> <p>The FITS service should never be exposed to the Internet!</p> <p>Note</p> <p>While the FITS service can be deployed without a container, we have no information or documentation on how to achieve such a setup.</p> <p>Warning</p> <p>The <code>islandora/fits:main</code> unfortunately runs as <code>root</code> inside the container. It is therefore not possible to deploy this service in a restricted OpenShift environment. We also do not support this service as part of our Helm chart.</p> <p>Note</p> <p>Due to the many shortcomings of this service, we are currently working on deprecating it and replacing it with a variant built directly into DAMAP.</p>"},{"location":"manual/deployment/frontend/","title":"Deploying the DAMAP frontend","text":"<p>The DAMAP frontend is an Angular application that comes as a standard nginx container with the name of <code>ghcr.io/damap-org/damap-frontend:next</code> and will listen on port 8080.</p> <p>Tip</p> <p>The frontend OIDC and most other settings are configured through the backend. For text and color changes you will need to recompile the frontend.</p> <p>Testing DAMAP</p> <p>For your first test run, we recommend opening the developer console of your browser (F12) as well as the log output of the DAMAP backend. You can now reload the DAMAP page and look if there are any errors. </p>"},{"location":"manual/deployment/gotenberg/","title":"Deploying Gotenberg (optional)","text":"<p>Optionally, DAMAP can use Gotenberg to create preview PDFs. Deploying this service is optional.</p> <p>Please note that Gotenberg is only available as a container image, not for standalone deployments. When deploying with Kubernetes, we recommend deploying it in the same pod as the backend. If you are deploying with Docker, make sure Gotenberg is reachable by the backend, for example by exposing it on a Docker network.</p> <p>We currently recommend deploying the Gotenberg service from the <code>gotenberg/gotenberg:8</code> container image, which will expose the service on port 3000. The DAMAP backend accesses this service directly.</p> <p>Warning</p> <p>The Gotenberg service should never be exposed to the Internet!</p> <p>Check the Gotenberg docs for details </p>"},{"location":"manual/deployment/oidc/","title":"OIDC setup for DAMAP","text":"<p>DAMAP authenticates using your institutional OIDC server. OIDC is an authentication system that lets your users log into DAMAP with their existing credentials rather than creating new credentials.</p> <p>Please note that DAMAP does not work without an OIDC server. If you do not have an institutional OIDC server, we recommend deploying Keycloak as it is known to work with DAMAP, but a description on how to deploy and secure it is beyond the scope of this documentation.</p> <p>Tip</p> <p>The DAMAP Helm chart supports deploying Keycloak for testing purposes, as does the Docker Compose setup.</p> <p>Warning</p> <p>DAMAP requires the OIDC server to run on a <code>https://</code> URL unless the hostname is <code>localhost</code>. Make sure your OIDC server has a valid TLS certificate!</p>"},{"location":"manual/deployment/oidc/#creating-a-client-id","title":"Creating a client ID","text":"<p>In order to use DAMAP, you will need to create a client ID in your OIDC configuration that supports the authorization code flow with Proof Key for Code Exchange (PKCE). The latter part is important as DAMAP does not work without PKCE support.</p> <p>Also make sure to configure the correct redirect URL to the URL where your frontend will live. Additionally, set the CORS headers to match your frontend URL.</p> <p>Please make a note of the client ID as you will need it when configuring the backend. Additionally, note down the URL at which your users will be able to access your OIDC server, as well as the URL which the backend will use to reach the server if it differs from the user-facing URL.</p>"}]}